<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group7.edu.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.group7.edu.entity.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="lecturer" jdbcType="INTEGER" property="lecturer" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="cover_url" jdbcType="VARCHAR" property="coverUrl" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="orig_price" jdbcType="DECIMAL" property="origPrice" />
    <result column="subject" jdbcType="INTEGER" property="subject" />
    <result column="created_time" jdbcType="DATE" property="createdTime" />
    <result column="startTime" jdbcType="DATE" property="starttime" />
    <result column="terminal_time" jdbcType="DATE" property="terminalTime" />
    <result column="course_text" jdbcType="VARCHAR" property="courseText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, lecturer, category, cover_url, price, orig_price, subject, created_time, 
    startTime, terminal_time, course_text
  </sql>
  <select id="selectByExample" parameterType="com.group7.edu.entity.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.group7.edu.entity.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.group7.edu.entity.Course">
    insert into course (id, name, lecturer, 
      category, cover_url, price, 
      orig_price, subject, created_time, 
      startTime, terminal_time, course_text
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{lecturer,jdbcType=INTEGER}, 
      #{category,jdbcType=VARCHAR}, #{coverUrl,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{origPrice,jdbcType=DECIMAL}, #{subject,jdbcType=INTEGER}, #{createdTime,jdbcType=DATE}, 
      #{starttime,jdbcType=DATE}, #{terminalTime,jdbcType=DATE}, #{courseText,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.group7.edu.entity.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="lecturer != null">
        lecturer,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="coverUrl != null">
        cover_url,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="origPrice != null">
        orig_price,
      </if>
      <if test="subject != null">
        subject,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="terminalTime != null">
        terminal_time,
      </if>
      <if test="courseText != null">
        course_text,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="lecturer != null">
        #{lecturer,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="coverUrl != null">
        #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="origPrice != null">
        #{origPrice,jdbcType=DECIMAL},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=DATE},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=DATE},
      </if>
      <if test="terminalTime != null">
        #{terminalTime,jdbcType=DATE},
      </if>
      <if test="courseText != null">
        #{courseText,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.group7.edu.entity.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.lecturer != null">
        lecturer = #{record.lecturer,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.coverUrl != null">
        cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.origPrice != null">
        orig_price = #{record.origPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=INTEGER},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=DATE},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.terminalTime != null">
        terminal_time = #{record.terminalTime,jdbcType=DATE},
      </if>
      <if test="record.courseText != null">
        course_text = #{record.courseText,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      lecturer = #{record.lecturer,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR},
      cover_url = #{record.coverUrl,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      orig_price = #{record.origPrice,jdbcType=DECIMAL},
      subject = #{record.subject,jdbcType=INTEGER},
      created_time = #{record.createdTime,jdbcType=DATE},
      startTime = #{record.starttime,jdbcType=DATE},
      terminal_time = #{record.terminalTime,jdbcType=DATE},
      course_text = #{record.courseText,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.group7.edu.entity.Course">
    update course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="lecturer != null">
        lecturer = #{lecturer,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="coverUrl != null">
        cover_url = #{coverUrl,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="origPrice != null">
        orig_price = #{origPrice,jdbcType=DECIMAL},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=INTEGER},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=DATE},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=DATE},
      </if>
      <if test="terminalTime != null">
        terminal_time = #{terminalTime,jdbcType=DATE},
      </if>
      <if test="courseText != null">
        course_text = #{courseText,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.group7.edu.entity.Course">
    update course
    set name = #{name,jdbcType=VARCHAR},
      lecturer = #{lecturer,jdbcType=INTEGER},
      category = #{category,jdbcType=VARCHAR},
      cover_url = #{coverUrl,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      orig_price = #{origPrice,jdbcType=DECIMAL},
      subject = #{subject,jdbcType=INTEGER},
      created_time = #{createdTime,jdbcType=DATE},
      startTime = #{starttime,jdbcType=DATE},
      terminal_time = #{terminalTime,jdbcType=DATE},
      course_text = #{courseText,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>