<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group7.edu.mapper.StudentVideoRelationMapper">
  <resultMap id="BaseResultMap" type="com.group7.edu.entity.StudentVideoRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="video_id" jdbcType="INTEGER" property="videoId" />
    <result column="is_watched" jdbcType="BIT" property="isWatched" />
    <result column="is_liked" jdbcType="BIT" property="isLiked" />
    <result column="is_saved" jdbcType="BIT" property="isSaved" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, video_id, is_watched, is_liked, is_saved
  </sql>
  <select id="selectByExample" parameterType="com.group7.edu.entity.StudentVideoRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_video_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_video_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_video_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.group7.edu.entity.StudentVideoRelationExample">
    delete from student_video_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.group7.edu.entity.StudentVideoRelation">
    insert into student_video_relation (id, user_id, video_id, 
      is_watched, is_liked, is_saved)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{videoId,jdbcType=INTEGER}, 
      #{isWatched,jdbcType=BIT}, #{isLiked,jdbcType=BIT}, #{isSaved,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.group7.edu.entity.StudentVideoRelation">
    insert into student_video_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="isWatched != null">
        is_watched,
      </if>
      <if test="isLiked != null">
        is_liked,
      </if>
      <if test="isSaved != null">
        is_saved,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="isWatched != null">
        #{isWatched,jdbcType=BIT},
      </if>
      <if test="isLiked != null">
        #{isLiked,jdbcType=BIT},
      </if>
      <if test="isSaved != null">
        #{isSaved,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.group7.edu.entity.StudentVideoRelationExample" resultType="java.lang.Long">
    select count(*) from student_video_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_video_relation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.videoId != null">
        video_id = #{record.videoId,jdbcType=INTEGER},
      </if>
      <if test="record.isWatched != null">
        is_watched = #{record.isWatched,jdbcType=BIT},
      </if>
      <if test="record.isLiked != null">
        is_liked = #{record.isLiked,jdbcType=BIT},
      </if>
      <if test="record.isSaved != null">
        is_saved = #{record.isSaved,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_video_relation
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      video_id = #{record.videoId,jdbcType=INTEGER},
      is_watched = #{record.isWatched,jdbcType=BIT},
      is_liked = #{record.isLiked,jdbcType=BIT},
      is_saved = #{record.isSaved,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.group7.edu.entity.StudentVideoRelation">
    update student_video_relation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="isWatched != null">
        is_watched = #{isWatched,jdbcType=BIT},
      </if>
      <if test="isLiked != null">
        is_liked = #{isLiked,jdbcType=BIT},
      </if>
      <if test="isSaved != null">
        is_saved = #{isSaved,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.group7.edu.entity.StudentVideoRelation">
    update student_video_relation
    set user_id = #{userId,jdbcType=INTEGER},
      video_id = #{videoId,jdbcType=INTEGER},
      is_watched = #{isWatched,jdbcType=BIT},
      is_liked = #{isLiked,jdbcType=BIT},
      is_saved = #{isSaved,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>